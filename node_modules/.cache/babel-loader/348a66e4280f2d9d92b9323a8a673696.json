{"ast":null,"code":"var _jsxFileName = \"/home/priya/Desktop/newProject/react-pagination/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\nimport './App.css';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [postsData, setPostsData] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageCount, setPageCount] = useState('');\n  const [isReceive, setIsReceive] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      await axios.get(`https://api.punkapi.com/v2/beers`).then(res => {\n        setPosts(res.data);\n        setIsReceive(true);\n      });\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    receiveData();\n  }, [isReceive === true]);\n  useEffect(() => {\n    setIsReceive(false);\n    receiveData();\n  }, [offset, currentPage]);\n\n  const receiveData = () => {\n    var data = [];\n    data = posts;\n    const sliceData = data && data.slice(offset, offset + perPage);\n    const pageCount = Math.ceil(data && data.length / perPage);\n    setPostsData(sliceData);\n    setPageCount(pageCount);\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * perPage;\n    setCurrentPage(selectedPage);\n    setOffset(offset);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-primary mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"List\"), /*#__PURE__*/React.createElement(Posts, {\n    posts: postsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    pageCount: pageCount,\n    onPageChange: handlePageClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/priya/Desktop/newProject/react-pagination/src/App.js"],"names":["React","useState","useEffect","axios","Posts","Pagination","App","posts","setPosts","postsData","setPostsData","offset","setOffset","perPage","setPerPage","currentPage","setCurrentPage","pageCount","setPageCount","isReceive","setIsReceive","fetchPosts","get","then","res","data","receiveData","sliceData","slice","Math","ceil","length","handlePageClick","e","selectedPage","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\nimport './App.css';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [postsData, setPostsData] = useState([]);\n  const[offset, setOffset]=useState(0);\n  const[perPage, setPerPage] =useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageCount, setPageCount] = useState('');\n  const [isReceive, setIsReceive] = useState(false);\n\n    useEffect(() => {\n      const fetchPosts = async () => {\n        await axios.get(`https://api.punkapi.com/v2/beers`)\n        .then((res)=>{\n          setPosts(res.data);\n          setIsReceive(true)\n        })\n      };\n      fetchPosts();\n    }, []);\n    \n    useEffect(()=>{\n      receiveData()\n    },[isReceive === true])\n\n    useEffect(()=>{\n      setIsReceive(false);\n      receiveData()\n    },[offset,currentPage])\n     \n\n  const receiveData=()=>{\n    var data =[]\n    data= posts;\n    const sliceData =data && data.slice(offset,offset + perPage)\n    const pageCount = Math.ceil(data && data.length/perPage)\n    setPostsData(sliceData)\n    setPageCount(pageCount)\n  }\n\n  const handlePageClick=(e)=>{\n    const selectedPage= e.selected;\n    const offset= selectedPage *  perPage;\n    setCurrentPage(selectedPage)\n    setOffset(offset)\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-primary mb-3\">List</h1>\n      <Posts posts={postsData}/>\n      <Pagination\n       pageCount={pageCount}\n       onPageChange={handlePageClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}